// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/kujilabo/cocotola-api/src/app/domain"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// WorkbookSearchResult is an autogenerated mock type for the WorkbookSearchResult type
type WorkbookSearchResult struct {
	mock.Mock
}

// GetResults provides a mock function with given fields:
func (_m *WorkbookSearchResult) GetResults() []domain.WorkbookModel {
	ret := _m.Called()

	var r0 []domain.WorkbookModel
	if rf, ok := ret.Get(0).(func() []domain.WorkbookModel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.WorkbookModel)
		}
	}

	return r0
}

// GetTotalCount provides a mock function with given fields:
func (_m *WorkbookSearchResult) GetTotalCount() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewWorkbookSearchResult creates a new instance of WorkbookSearchResult. It also registers a cleanup function to assert the mocks expectations.
func NewWorkbookSearchResult(t testing.TB) *WorkbookSearchResult {
	mock := &WorkbookSearchResult{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
