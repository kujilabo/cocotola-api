// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	context "context"

	service "github.com/kujilabo/cocotola-api/pkg_app/service"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AudioRepositoryFactory is an autogenerated mock type for the AudioRepositoryFactory type
type AudioRepositoryFactory struct {
	mock.Mock
}

// NewAudioRepository provides a mock function with given fields: ctx
func (_m *AudioRepositoryFactory) NewAudioRepository(ctx context.Context) service.AudioRepository {
	ret := _m.Called(ctx)

	var r0 service.AudioRepository
	if rf, ok := ret.Get(0).(func(context.Context) service.AudioRepository); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.AudioRepository)
		}
	}

	return r0
}

// NewAudioRepositoryFactory creates a new instance of AudioRepositoryFactory. It also registers a cleanup function to assert the mocks expectations.
func NewAudioRepositoryFactory(t testing.TB) *AudioRepositoryFactory {
	mock := &AudioRepositoryFactory{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
